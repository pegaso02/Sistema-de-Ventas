package Vista;

import Controlador.Ctrl_Producto;
import Modelo.Producto;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.ResultSetImpl;
import com.mysql.jdbc.Statement;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */
public class JInternalFrameProducto extends javax.swing.JInternalFrame {
    
    int ObtenerIdCategoriaCombo = 0;
    
    
    /**
     * Creates new form JInternalFrameProducto
     */
    public JInternalFrameProducto() {
        initComponents();
        this.setSize(new Dimension(400,300));
        this.setTitle("Nuevo producto");
        this.cargarComboCategorias();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNuevoProducto = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jComboBoxIva = new javax.swing.JComboBox<>();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jButtonGuardar = new javax.swing.JButton();
        jLabelWallPapper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelNuevoProducto.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabelNuevoProducto.setText("Nuevo producto");
        getContentPane().add(jLabelNuevoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Nombre:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Cantidad:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Precio:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Descripcion:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Iva:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Categoria:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, -1, -1));

        txtNombre.setBackground(new java.awt.Color(255, 255, 255));
        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 170, -1));

        txtCantidad.setBackground(new java.awt.Color(255, 255, 255));
        txtCantidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 170, -1));

        txtPrecio.setBackground(new java.awt.Color(255, 255, 255));
        txtPrecio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 170, -1));

        txtDescripcion.setBackground(new java.awt.Color(255, 255, 255));
        txtDescripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 170, -1));

        jTextField5.setBackground(new java.awt.Color(255, 255, 255));
        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 170, -1));

        jComboBoxIva.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxIva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Iva:", "No Graba Iva:", "19%", "10%", " ", " " }));
        jComboBoxIva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxIvaActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxIva, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 170, -1));

        jComboBoxCategoria.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Categoria:", "Item 2", "Item 3", "Item 4" }));
        jComboBoxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCategoriaActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 170, -1));

        jButtonGuardar.setBackground(new java.awt.Color(0, 204, 204));
        jButtonGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 90, 30));

        jLabelWallPapper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/fondo3.jpg"))); // NOI18N
        getContentPane().add(jLabelWallPapper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 270));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxIvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxIvaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxIvaActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        Ctrl_Producto controlProducto = new Ctrl_Producto();
        Producto producto = new Producto();
        
        String iva = "";
        String categoria = "";
        iva = jComboBoxIva.getSelectedItem().toString().trim();
        categoria = jComboBoxCategoria.getSelectedItem().toString().trim();
        
        // Validar campos
        
        if(txtNombre.getText().equals(" ") || txtCantidad.getText().equals(" ") || txtPrecio.getText().equals(" ")){
            JOptionPane.showMessageDialog(null, "por favor completa todos los campos");
            txtNombre.setBackground(Color.red);
            txtCantidad.setBackground(Color.red);
            txtPrecio.setBackground(Color.red);
        } else{
            // CONSULTA PARA VER SI EL PRODUCTO EXISTE EN LA BASE DE DATOS
            
            if(!controlProducto.existeProducto(txtNombre.getText().trim())){
                
                if(iva.equalsIgnoreCase("Seleccione Iva:")){
                    JOptionPane.showMessageDialog(null, "Seleccione Iva:");
                } else{
                    
                    if(categoria.equalsIgnoreCase("Seleccione Categoria:")){
                        JOptionPane.showMessageDialog(null , "Seleccione Categoria:");
                        
                    }else{
                        
                        try {
                            producto.setNombre(txtNombre.getText().trim());
                            producto.setCantidad(Integer.parseInt(txtCantidad.getText().trim()));
                            
                            /*
                            * Evaluar si recibe como decimal una coma (,), la transformamos a punto decimal, para que la bd no de error
                            */
                            String precioTXT = "";
                            Double precio = 0.0;
                            precioTXT = txtPrecio.getText().trim();
                            boolean aux = false;
                            
                            for(int i = 0; i < precioTXT.length();i++){
                                if(precioTXT.charAt(i) == ','  ){
                                    String precioNuevo = precioTXT.replace(",", ".");
                                    precio = Double.parseDouble(precioNuevo);
                                    aux = true;
                                    
                                }
                            }
                            
                            // Evaluar la condicion
                            if(aux == true){
                                producto.setPrecio(precio);
                            } else{
                                precio = Double.parseDouble(precioTXT);
                                producto.setPrecio(precio);
                            }
                            
                            producto.setDescripcion(txtDescripcion.getText().trim());
                            
                            // Validar iva
                            
                            if(iva.equalsIgnoreCase("No Graba Iva:")){
                                producto.setPorcentajeIva(0);
                            } else if(iva.equals("19%")){
                                producto.setPorcentajeIva(19);
                            } else if(iva.equals("10%")){
                                producto.setPorcentajeIva(10);
                            }
                            
                            // idCategoria cargar metodo que obtiene el id de la categoria
                            
                            this.IdCategoria();
                            producto.setIdCategoria(ObtenerIdCategoriaCombo);
                            producto.setEstado(1);
                            
                            if(controlProducto.Guardar(producto)){
                                JOptionPane.showMessageDialog(null, "Registro guardado con exito");
                                txtNombre.setBackground(Color.GREEN);
                                txtDescripcion.setBackground(Color.GREEN);
                                txtCantidad.setBackground(Color.GREEN);
                                txtPrecio.setBackground(Color.GREEN);
                                
                                this.cargarComboCategorias();
                                this.jComboBoxIva.setSelectedItem("Seleccione Iva:");
                                
                                limpiar();
                                                               
                            }else{
                                JOptionPane.showMessageDialog(null, "Error al guardar");
                            }
                            
                            
                            
                        } catch (HeadlessException | NumberFormatException e) {
                            System.out.println("error:  "+e);
                        }
                        
                        
                    }
                }
                
            } else{
                JOptionPane.showMessageDialog(null, "El producto ya existe");
            }
            
 
            
        }
        
 

    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jComboBoxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCategoriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JComboBox<String> jComboBoxCategoria;
    private javax.swing.JComboBox<String> jComboBoxIva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelNuevoProducto;
    private javax.swing.JLabel jLabelWallPapper;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    /*
    Metodo para cargar las categorias
    */
    
public void cargarComboCategorias(){
    
    Connection con =(Connection) Conexion.Conexion.conectar();
    String sql = "select * from tb_categoria";
    Statement st;
    
    try {
        st =(Statement) con.createStatement();
        ResultSetImpl rs = (ResultSetImpl)st.executeQuery(sql);
        jComboBoxCategoria.removeAllItems();
        jComboBoxCategoria.addItem("Seleccionar categoria");
        
        while(rs.next()){
            jComboBoxCategoria.addItem(rs.getString("descripcion"));
        }
        st.close();
        rs.close();
        con.close();
        
    } catch (SQLException e) {
        System.out.println("error al cargar categorias" + e);
    }
    
}

    public int IdCategoria(){
        String sql = "select * from tb_categoria where descripcion = ' " + this.jComboBoxCategoria.getSelectedItem() + " ' ";
        Statement st;
        
        try {
            Connection con = (Connection)Conexion.Conexion.conectar();
            st =  (Statement)con.createStatement();
            ResultSetImpl rs = (ResultSetImpl)st.executeQuery(sql);
            
            while(rs.next()){
                ObtenerIdCategoriaCombo = rs.getInt("idCategoria");
            }
            
            
            
        } catch (SQLException e) {
            
            System.out.println("error al obtener el idCategoria");
        }
        
        return ObtenerIdCategoriaCombo;
        
    }
    
    public void limpiar(){
        txtNombre.setText("");
        txtCantidad.setText("");
        txtDescripcion.setText("");
        txtPrecio.setText("");
    }




}
